// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cdmm_amp
SEXP cdmm_amp(NumericVector y, NumericMatrix x, NumericVector fac, NumericVector lams, double mu, double maxv, IntegerVector maxit, NumericVector tol);
RcppExport SEXP _CompLasso_cdmm_amp(SEXP ySEXP, SEXP xSEXP, SEXP facSEXP, SEXP lamsSEXP, SEXP muSEXP, SEXP maxvSEXP, SEXP maxitSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fac(facSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lams(lamsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type maxv(maxvSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cdmm_amp(y, x, fac, lams, mu, maxv, maxit, tol));
    return rcpp_result_gen;
END_RCPP
}
// signC
double signC(double x);
RcppExport SEXP _CompLasso_signC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(signC(x));
    return rcpp_result_gen;
END_RCPP
}
// absC
double absC(double x);
RcppExport SEXP _CompLasso_absC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(absC(x));
    return rcpp_result_gen;
END_RCPP
}
// absC2
arma::vec absC2(arma::vec x);
RcppExport SEXP _CompLasso_absC2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(absC2(x));
    return rcpp_result_gen;
END_RCPP
}
// softC
double softC(double x, double lam);
RcppExport SEXP _CompLasso_softC(SEXP xSEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(softC(x, lam));
    return rcpp_result_gen;
END_RCPP
}
// softC2
arma::vec softC2(arma::vec x, double lam);
RcppExport SEXP _CompLasso_softC2(SEXP xSEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(softC2(x, lam));
    return rcpp_result_gen;
END_RCPP
}
// sqrtC
double sqrtC(double x);
RcppExport SEXP _CompLasso_sqrtC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sqrtC(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CompLasso_cdmm_amp", (DL_FUNC) &_CompLasso_cdmm_amp, 8},
    {"_CompLasso_signC", (DL_FUNC) &_CompLasso_signC, 1},
    {"_CompLasso_absC", (DL_FUNC) &_CompLasso_absC, 1},
    {"_CompLasso_absC2", (DL_FUNC) &_CompLasso_absC2, 1},
    {"_CompLasso_softC", (DL_FUNC) &_CompLasso_softC, 2},
    {"_CompLasso_softC2", (DL_FUNC) &_CompLasso_softC2, 2},
    {"_CompLasso_sqrtC", (DL_FUNC) &_CompLasso_sqrtC, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CompLasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
